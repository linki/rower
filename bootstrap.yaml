---
name: rower-{system.architecture}-{provider.virtualization}-{volume.backing}-{%Y}{%m}{%d}-{%H}{%M}
provider:
  name: ec2
  description: Rower operating system ({system.architecture} {provider.virtualization} {volume.backing}); https://github.com/sarnowski/rower
  virtualization: hvm
  enhanced_networking: simple
  install_init_scripts: false
bootstrapper:
  workspace: /target
# DEV ONLY:
#  tarball: true
system:
  release: jessie
  architecture: amd64
  bootloader: grub
  charmap: UTF-8
  locale: en_US
  timezone: UTC
volume:
  backing: ebs
  partitions:
    type: msdos
    root:
      filesystem: ext4
      size: 8GiB
packages:
  mirror: http://cloudfront.debian.net/debian
plugins:
  ntp: {}
  docker_daemon:
    version: 1.9.1
  commands:
    commands:
       # Fix a cloud-init bug where it uses nobootwait
       # see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=789884
#TODO remove?       - [ 'chroot', '{root}', '/bin/sh', '-c', 'echo "mount_default_fields: [~, ~, ''auto'', ''defaults,nofail'', ''0'', ''2'']" > /etc/cloud/cloud.cfg.d/99_kubernetes.cfg' ]

       # We perform a full replacement of some grub conf variables:
       #   GRUB_CMDLINE_LINUX_DEFAULT (add memory cgroup)
       #   GRUB_TIMEOUT (remove boot delay)
       # (but leave the old versions commented out for people to see)
       - [ 'chroot', '{root}', 'touch', '/etc/default/grub' ]
       - [ 'chroot', '{root}', 'sed', '-i', 's/^GRUB_CMDLINE_LINUX_DEFAULT=/#GRUB_CMDLINE_LINUX_DEFAULT=/g', '/etc/default/grub' ]
       - [ 'chroot', '{root}', 'sed', '-i', 's/^GRUB_TIMEOUT=/#GRUB_TIMEOUT=/g', '/etc/default/grub' ]
       - [ 'chroot', '{root}', '/bin/sh', '-c', 'echo "# kubernetes image changes" >> /etc/default/grub' ]
       - [ 'chroot', '{root}', '/bin/sh', '-c', 'echo "GRUB_CMDLINE_LINUX_DEFAULT=\"cgroup_enable=memory oops=panic panic=10 console=ttyS0\"" >> /etc/default/grub' ]
       - [ 'chroot', '{root}', '/bin/sh', '-c', 'echo "GRUB_TIMEOUT=0" >> /etc/default/grub' ]
       - [ 'chroot', '{root}', 'update-grub2' ]

       # install kubelet
       - [ 'mkdir', '-p', '{root}/usr/local/sbin', '{root}/etc/systemd/system' ]
       - [ 'wget', '-nv', '-O', '{root}/usr/local/sbin/kubelet', 'https://storage.googleapis.com/kubernetes-release/release/v1.2.0/bin/linux/amd64/kubelet' ]
       #TODO check hash of kubelet binary
       - [ 'chmod', '0755', '{root}/usr/local/sbin/kubelet' ]
       - [ 'cp', 'kubelet.service', '{root}/etc/systemd/system/kubelet.service' ]
       - [ 'chown', 'root:root', '{root}/etc/systemd/system/kubelet.service' ]
       - [ 'chroot', '{root}', 'systemctl', 'enable', 'kubelet' ]

# DEV ONLY:
#  root_password:
#    password: foobartest123
